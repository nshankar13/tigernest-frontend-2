{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport Link from 'next/link';\nimport Head from '../components/head';\nimport Nav from '../components/nav';\nimport fetch from 'isomorphic-unfetch';\nimport { Button, Container, Row, Col, CustomInput, Form, FormFeedback, FormGroup, Label, Input, FormText } from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nvar eventRegister2 =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(eventRegister2, _React$Component);\n\n  function eventRegister2(props, context) {\n    var _this;\n\n    _classCallCheck(this, eventRegister2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(eventRegister2).call(this, props, context));\n    _this.addUser = _this.addUser.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(eventRegister2, [{\n    key: \"addUser\",\n    value: function () {\n      var _addUser = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var userInfo, res, content;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                //console.log(document.forms[\"registerForm\"][\"netid\"].value);\n                userInfo = {\n                  \"name\": document.forms[\"registerForm\"][\"name\"].value,\n                  \"netid\": document.forms[\"registerForm\"][\"netid\"].value,\n                  \"email\": document.forms[\"registerForm\"][\"email\"].value,\n                  \"campus_organizations\": document.forms[\"registerForm\"][\"campusorg\"].value,\n                  \"hosting_address\": document.forms[\"registerForm\"][\"address\"].value,\n                  \"max_visitors\": _parseInt(document.forms[\"registerForm\"][\"maxvisitor\"].value),\n                  \"gender\": document.forms[\"registerForm\"][\"gender\"].value,\n                  \"same_gender\": true,\n                  \"expandable\": true,\n                  \"additional_visitors\": 1\n                };\n                console.log(_JSON$stringify(userInfo));\n                _context.next = 4;\n                return fetch('http://localhost:5000/host', {\n                  method: \"POST\",\n                  headers: {\n                    'Accept': 'application/json',\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: _JSON$stringify(userInfo)\n                });\n\n              case 4:\n                res = _context.sent;\n                _context.next = 7;\n                return res.json();\n\n              case 7:\n                content = _context.sent;\n                console.log(content);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function addUser() {\n        return _addUser.apply(this, arguments);\n      }\n\n      return addUser;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, null, React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"exampleEmail\",\n        sm: 2\n      }, \"Email\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"exampleEmail\",\n        placeholder: \"with a placeholder\"\n      }))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        sm: 2\n      }, \"Password\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"password placeholder\"\n      }))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"exampleSelect\",\n        sm: 2\n      }, \"Select\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"exampleSelect\"\n      }))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"exampleSelectMulti\",\n        sm: 2\n      }, \"Select Multiple\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"selectMulti\",\n        id: \"exampleSelectMulti\",\n        multiple: true\n      }))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        sm: 2\n      }, \"Text Area\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"textarea\",\n        name: \"text\",\n        id: \"exampleText\"\n      }))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"exampleFile\",\n        sm: 2\n      }, \"File\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"file\",\n        name: \"file\",\n        id: \"exampleFile\"\n      }), React.createElement(FormText, {\n        color: \"muted\"\n      }, \"This is some placeholder block-level help text for the above input. It's a bit lighter and easily wraps to a new line.\"))), React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        row: true\n      }, React.createElement(\"legend\", {\n        className: \"col-form-label col-sm-2\"\n      }, \"Radio Buttons\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(FormGroup, {\n        check: true\n      }, React.createElement(Label, {\n        check: true\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"radio2\"\n      }), ' ', \"Option one is this and that\\u2014be sure to include why it's great\")), React.createElement(FormGroup, {\n        check: true\n      }, React.createElement(Label, {\n        check: true\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"radio2\"\n      }), ' ', \"Option two can be something else and selecting it will deselect option one\")), React.createElement(FormGroup, {\n        check: true,\n        disabled: true\n      }, React.createElement(Label, {\n        check: true\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"radio2\",\n        disabled: true\n      }), ' ', \"Option three is disabled\")))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"checkbox2\",\n        sm: 2\n      }, \"Checkbox\"), React.createElement(Col, {\n        sm: {\n          size: 10\n        }\n      }, React.createElement(FormGroup, {\n        check: true\n      }, React.createElement(Label, {\n        check: true\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        id: \"checkbox2\"\n      }), ' ', \"Check me out\")))), React.createElement(FormGroup, {\n        check: true,\n        row: true\n      }, React.createElement(Col, {\n        sm: {\n          size: 10,\n          offset: 2\n        }\n      }, React.createElement(Button, null, \"Submit\"))));\n    }\n  }]);\n\n  return eventRegister2;\n}(React.Component);\n\nexport default eventRegister2;","map":{"version":3,"sources":["/Users/nshankar13/Documents/github/TigerNest2/TigerNest/frontend/pages/eventRegister2.js"],"names":["React","Link","Head","Nav","fetch","Button","Container","Row","Col","CustomInput","Form","FormFeedback","FormGroup","Label","Input","FormText","PropTypes","eventRegister2","props","context","addUser","bind","userInfo","document","forms","value","console","log","method","headers","body","res","json","content","size","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport Head from '../components/head'\nimport Nav from '../components/nav'\nimport fetch from 'isomorphic-unfetch'\nimport { Button, Container, Row, Col, CustomInput, Form, FormFeedback, FormGroup, Label, Input, FormText} from 'reactstrap';\nimport PropTypes from 'prop-types'\n\n\n\nclass eventRegister2 extends React.Component {\n  constructor(props, context){\n    super(props, context);\n    this.addUser = this.addUser.bind(this);\n  }\n  async addUser(){\n  //console.log(document.forms[\"registerForm\"][\"netid\"].value);\n\n  let userInfo = {\n    \"name\": document.forms[\"registerForm\"][\"name\"].value, \n    \"netid\": document.forms[\"registerForm\"][\"netid\"].value,\n    \"email\": document.forms[\"registerForm\"][\"email\"].value, \n    \"campus_organizations\": document.forms[\"registerForm\"][\"campusorg\"].value,\n    \"hosting_address\": document.forms[\"registerForm\"][\"address\"].value,\n    \"max_visitors\": parseInt(document.forms[\"registerForm\"][\"maxvisitor\"].value),\n    \"gender\": document.forms[\"registerForm\"][\"gender\"].value, \n    \"same_gender\": true,\n    \"expandable\": true,\n    \"additional_visitors\": 1,\n  };\n\n  console.log(JSON.stringify(userInfo));\n\n  const res = await fetch('http://localhost:5000/host', {\n        method: \"POST\",\n        headers: {\n            'Accept': 'application/json',\n            \"Content-Type\": \"application/json\",\n        }, \n        body: JSON.stringify(userInfo)\n  });\n\n  \n\n  const content = await res.json();\n  console.log(content);\n}\n  render(){\n    return (\n<Form>\n        <FormGroup row>\n          <Label for=\"exampleEmail\" sm={2}>Email</Label>\n          <Col sm={10}>\n            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"examplePassword\" sm={2}>Password</Label>\n          <Col sm={10}>\n            <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"password placeholder\" />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleSelect\" sm={2}>Select</Label>\n          <Col sm={10}>\n            <Input type=\"select\" name=\"select\" id=\"exampleSelect\" />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleSelectMulti\" sm={2}>Select Multiple</Label>\n          <Col sm={10}>\n            <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleText\" sm={2}>Text Area</Label>\n          <Col sm={10}>\n            <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleFile\" sm={2}>File</Label>\n          <Col sm={10}>\n            <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n            <FormText color=\"muted\">\n              This is some placeholder block-level help text for the above input.\n              It's a bit lighter and easily wraps to a new line.\n            </FormText>\n          </Col>\n        </FormGroup>\n        <FormGroup tag=\"fieldset\" row>\n          <legend className=\"col-form-label col-sm-2\">Radio Buttons</legend>\n          <Col sm={10}>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio2\" />{' '}\n                Option one is this and that—be sure to include why it's great\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio2\" />{' '}\n                Option two can be something else and selecting it will deselect option one\n              </Label>\n            </FormGroup>\n            <FormGroup check disabled>\n              <Label check>\n                <Input type=\"radio\" name=\"radio2\" disabled />{' '}\n                Option three is disabled\n              </Label>\n            </FormGroup>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"checkbox2\" sm={2}>Checkbox</Label>\n          <Col sm={{ size: 10 }}>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"checkbox\" id=\"checkbox2\" />{' '}\n                Check me out\n              </Label>\n            </FormGroup>\n          </Col>\n        </FormGroup>\n        <FormGroup check row>\n          <Col sm={{ size: 10, offset: 2 }}>\n            <Button>Submit</Button>\n          </Col>\n        </FormGroup>\n      </Form>\n  )\n\n}\n}\n\n\nexport default eventRegister2\n"]},"metadata":{},"sourceType":"module"}