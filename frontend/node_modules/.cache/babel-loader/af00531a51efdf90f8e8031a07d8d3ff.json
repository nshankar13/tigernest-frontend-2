{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport { Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nvar eventRegister2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(eventRegister2, _Component);\n\n  function eventRegister2() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, eventRegister2);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(eventRegister2)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      theme: null,\n      dropdownOpen: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleDropdown\", function () {\n      _this.setState({\n        dropdownOpen: !_this.state.dropdownOpen\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"resetTheme\", function (evt) {\n      evt.preventDefault();\n\n      _this.setState({\n        theme: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"chooseTheme\", function (theme, evt) {\n      evt.preventDefault();\n\n      _this.setState({\n        theme: theme\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(eventRegister2, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          theme = _this$state.theme,\n          dropdownOpen = _this$state.dropdownOpen;\n      var themeClass = theme ? theme.toLowerCase() : 'secondary';\n      return React.createElement(\"div\", {\n        className: \"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\"\n      }, React.createElement(\"span\", {\n        className: \"h1 mb-4 w-100 text-center text-\".concat(themeClass)\n      }, theme || 'Default'), React.createElement(ButtonDropdown, {\n        isOpen: dropdownOpen,\n        toggle: this.toggleDropdown\n      }, React.createElement(Button, {\n        id: \"caret\",\n        color: themeClass\n      }, theme || 'Custom', \" Theme\"), React.createElement(DropdownToggle, {\n        caret: true,\n        size: \"lg\",\n        color: themeClass\n      }), React.createElement(DropdownMenu, null, React.createElement(DropdownItem, {\n        onClick: function onClick(e) {\n          return _this2.chooseTheme('Primary', e);\n        }\n      }, \"Primary Theme\"), React.createElement(DropdownItem, {\n        onClick: function onClick(e) {\n          return _this2.chooseTheme('Danger', e);\n        }\n      }, \"Danger Theme\"), React.createElement(DropdownItem, {\n        onClick: function onClick(e) {\n          return _this2.chooseTheme('Success', e);\n        }\n      }, \"Success Theme\"), React.createElement(DropdownItem, {\n        divider: true\n      }), React.createElement(DropdownItem, {\n        onClick: this.resetTheme\n      }, \"Default Theme\"))));\n    }\n  }]);\n\n  return eventRegister2;\n}(Component);\n\nexport default eventRegister2;","map":{"version":3,"sources":["/Users/nshankar13/Documents/github/TigerNest2/TigerNest/frontend/pages/eventRegister2.js"],"names":["React","Component","Button","ButtonDropdown","DropdownToggle","DropdownMenu","DropdownItem","eventRegister2","theme","dropdownOpen","setState","state","evt","preventDefault","themeClass","toLowerCase","toggleDropdown","e","chooseTheme","resetTheme"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,cAAjB,EAAiCC,cAAjC,EAAiDC,YAAjD,EAA+DC,YAA/D,QAAmF,YAAnF;;IAEMC,c;;;;;;;;;;;;;;;;;;4DAEI;AAAEC,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,YAAY,EAAE;AAA7B,K;;qEAES,YAAM;AACrB,YAAKC,QAAL,CAAc;AAAED,QAAAA,YAAY,EAAE,CAAC,MAAKE,KAAL,CAAWF;AAA5B,OAAd;AACD,K;;iEAEY,UAAAG,GAAG,EAAI;AAClBA,MAAAA,GAAG,CAACC,cAAJ;;AACA,YAAKH,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,K;;kEAEa,UAACA,KAAD,EAAQI,GAAR,EAAgB;AAC5BA,MAAAA,GAAG,CAACC,cAAJ;;AACA,YAAKH,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAALA;AAAF,OAAd;AACD,K;;;;;;;6BAEQ;AAAA;;AAAA,wBAEyB,KAAKG,KAF9B;AAAA,UAECH,KAFD,eAECA,KAFD;AAAA,UAEQC,YAFR,eAEQA,YAFR;AAGP,UAAMK,UAAU,GAAGN,KAAK,GAAGA,KAAK,CAACO,WAAN,EAAH,GAAyB,WAAjD;AAEA,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SAEE;AAAM,QAAA,SAAS,2CAAoCD,UAApC;AAAf,SAAkEN,KAAK,IAAI,SAA3E,CAFF,EAIE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAEC,YAAxB;AAAsC,QAAA,MAAM,EAAE,KAAKO;AAAnD,SACE,oBAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,OAAX;AAAmB,QAAA,KAAK,EAAEF;AAA1B,SAAuCN,KAAK,IAAI,QAAhD,WADF,EAEE,oBAAC,cAAD;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,IAAI,EAAC,IAA3B;AAAgC,QAAA,KAAK,EAAEM;AAAvC,QAFF,EAGE,oBAAC,YAAD,QACE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,iBAAAG,CAAC;AAAA,iBAAI,MAAI,CAACC,WAAL,CAAiB,SAAjB,EAA4BD,CAA5B,CAAJ;AAAA;AAAxB,yBADF,EAEE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,iBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACC,WAAL,CAAiB,QAAjB,EAA2BD,CAA3B,CAAJ;AAAA;AAAxB,wBAFF,EAGE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,iBAAAA,CAAC;AAAA,iBAAI,MAAI,CAACC,WAAL,CAAiB,SAAjB,EAA4BD,CAA5B,CAAJ;AAAA;AAAxB,yBAHF,EAIE,oBAAC,YAAD;AAAc,QAAA,OAAO;AAArB,QAJF,EAKE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAE,KAAKE;AAA5B,yBALF,CAHF,CAJF,CADF;AAoBD;;;;EA3C0BlB,S;;AA+C7B,eAAeM,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass eventRegister2 extends Component {\n\n  state = { theme: null, dropdownOpen: false }\n  \n  toggleDropdown = () => {\n    this.setState({ dropdownOpen: !this.state.dropdownOpen });\n  }\n  \n  resetTheme = evt => {\n    evt.preventDefault();\n    this.setState({ theme: null });\n  }\n  \n  chooseTheme = (theme, evt) => {\n    evt.preventDefault();\n    this.setState({ theme });\n  }\n  \n  render() {\n  \n    const { theme, dropdownOpen } = this.state;\n    const themeClass = theme ? theme.toLowerCase() : 'secondary';\n    \n    return (\n      <div className=\"d-flex flex-wrap justify-content-center position-absolute w-100 h-100 align-items-center align-content-center\">\n      \n        <span className={`h1 mb-4 w-100 text-center text-${themeClass}`}>{theme || 'Default'}</span>\n        \n        <ButtonDropdown isOpen={dropdownOpen} toggle={this.toggleDropdown}>\n          <Button id=\"caret\" color={themeClass}>{theme || 'Custom'} Theme</Button>\n          <DropdownToggle caret size=\"lg\" color={themeClass} />\n          <DropdownMenu>\n            <DropdownItem onClick={e => this.chooseTheme('Primary', e)}>Primary Theme</DropdownItem>\n            <DropdownItem onClick={e => this.chooseTheme('Danger', e)}>Danger Theme</DropdownItem>\n            <DropdownItem onClick={e => this.chooseTheme('Success', e)}>Success Theme</DropdownItem>\n            <DropdownItem divider />\n            <DropdownItem onClick={this.resetTheme}>Default Theme</DropdownItem>\n          </DropdownMenu>\n        </ButtonDropdown>\n        \n      </div>\n    );\n    \n  }\n  \n}\n\nexport default eventRegister2;\n"]},"metadata":{},"sourceType":"module"}