{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport Link from 'next/link';\nimport Head from '../components/head';\nimport Nav from '../components/nav';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport { Button, Container, Row, Col, CustomInput, Form, FormFeedback, FormGroup, FormControl, Label, Input, FormText, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport Cookies from 'js-cookie';\nimport './bootstrap.css';\nvar database_url = \"http://localhost:5000\";\nvar divStyle = {\n  //color: 'slate grey'\n  //color: 'dodgerblue'\n  color: 'white'\n};\n\nvar VisitorInterestForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VisitorInterestForm, _React$Component);\n\n  function VisitorInterestForm(props, context) {\n    var _this;\n\n    _classCallCheck(this, VisitorInterestForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(VisitorInterestForm).call(this, props, context));\n    _this.state = {\n      mismatchPassword: false,\n      wrongRegCode: false,\n      dropdownOpen: false,\n      current_event: {\n        name: \"\",\n        start_time: \"\",\n        end_time: \"\",\n        description: \"\",\n        hosting_organization: \"\",\n        expected_number_visitors: \"\",\n        event_id: \"\"\n      }\n    };\n    _this.addOrganizer = _this.addOrganizer.bind(_assertThisInitialized(_this));\n    _this.setSelectedEvent = _this.setSelectedEvent.bind(_assertThisInitialized(_this));\n    _this.toggleDropdown = _this.toggleDropdown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(VisitorInterestForm, [{\n    key: \"setSelectedEvent\",\n    value: function () {\n      var _setSelectedEvent = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var val, res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                val = event.target.value;\n                _context.next = 3;\n                return fetch(database_url + '/event/' + val, {\n                  method: \"GET\",\n                  headers: {\n                    \"Content-Type\": \"text/plain\",\n                    \"Access-Control-Allow-Origin\": \"*\"\n                  }\n                });\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                data = _context.sent;\n                data = _JSON$stringify(data);\n                data = JSON.parse(data);\n                this.setState(function (state) {\n                  return {\n                    current_event: data\n                  };\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setSelectedEvent(_x) {\n        return _setSelectedEvent.apply(this, arguments);\n      }\n\n      return setSelectedEvent;\n    }()\n  }, {\n    key: \"addOrganizer\",\n    value: function () {\n      var _addOrganizer = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var emailInput, firstnameInput, lastnameInput, university, event_name, organizer_info;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                //console.log(document.forms[\"registerForm\"][\"netid\"].value);\n                emailInput = document.forms[\"registerForm\"][\"email\"].value; //let passwordInput1 = document.forms[\"registerForm\"][\"password1\"].value;\n                //let passwordInput2 = document.forms[\"registerForm\"][\"password2\"].value;\n\n                firstnameInput = document.forms[\"registerForm\"][\"firstname\"].value;\n                lastnameInput = document.forms[\"registerForm\"][\"lastname\"].value;\n                university = document.forms[\"registerForm\"][\"university\"].value;\n                event_name = document.forms[\"registerForm\"][\"eventname\"].value; //let registrationCode = document.forms[\"registerForm\"][\"regcode\"].value;\n                //let netid = document.forms[\"registerForm\"][\"netid\"].value;\n                //let netid = Cookies.get('netid');\n                // need to add to eligibilities and\n                //\n\n                /*const res = await fetch(\"http://localhost:5000/getRegCode\", {\n                    method: \"GET\",\n                    headers: {\n                        \"Content-Type\": \"text/plain\",\n                        \"Access-Control-Allow-Origin\": \"*\"\n                    }})\n                 var data = await res.json();\n                data = JSON.stringify(data);\n                 data = JSON.parse(data);\n                let trueRegCode = data['regCode'];*/\n\n                /*if (passwordInput1 !== passwordInput2)\n                {\n                    this.setState(state => ({ mismatchPassword: true}));\n                }*/\n\n                organizer_info = {\n                  \"firstname\": firstnameInput,\n                  \"lastname\": lastnameInput,\n                  //\"password\": passwordInput1,\n                  \"password\": \"abc\",\n                  \"campus_organizations\": \"\",\n                  \"netid\": netid,\n                  \"email\": emailInput\n                };\n                /*const res = await fetch('http://localhost:5000/event_organizer', {\n                 method: \"POST\",\n                 headers: {\n                     'Accept': 'application/json',\n                     \"Content-Type\": \"application/json\"\n                 }, \n                 body: JSON.stringify(organizer_info)\n                });\n                Router.push(\"/myEvents\");*/\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function addOrganizer() {\n        return _addOrganizer.apply(this, arguments);\n      }\n\n      return addOrganizer;\n    }()\n  }, {\n    key: \"toggleDropdown\",\n    value: function toggleDropdown() {\n      this.setState(function (prevState) {\n        return {\n          dropdownOpen: !prevState.dropdownOpen\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render(props) {\n      var _this2 = this;\n\n      return React.createElement(\"div\", null, React.createElement(Head, {\n        title: \"Event Signup\"\n      }), React.createElement(Nav, null), React.createElement(\"div\", {\n        className: \"hero\"\n      }, React.createElement(\"div\", {\n        className: \"center\"\n      }, React.createElement(\"center\", null, \" \", React.createElement(\"h2\", {\n        style: divStyle\n      }, \" Event Interest Form \"), \" \"), React.createElement(\"br\", null), React.createElement(\"center\", null, \" \", React.createElement(\"p\", {\n        style: divStyle\n      }, \" Fill out the following information to sign up for an event! \"), \" \"), React.createElement(\"br\", null), React.createElement(Form, {\n        id: \"registerForm\"\n      }, React.createElement(\"center\", null, React.createElement(Row, null, React.createElement(Col, null, React.createElement(\"p\", {\n        style: divStyle\n      }, \" First Name \")), React.createElement(Col, null, React.createElement(Input, {\n        type: \"text\",\n        name: \"firstname\",\n        id: \"firstname\"\n      })), React.createElement(Col, null, React.createElement(\"p\", {\n        style: divStyle\n      }, \" Last Name  \")), React.createElement(Col, null, React.createElement(Input, {\n        type: \"text\",\n        name: \"lastname\",\n        id: \"lastname\"\n      }))), React.createElement(\"br\", null), React.createElement(Row, null, React.createElement(Col, null, React.createElement(\"p\", {\n        style: divStyle\n      }, \" Which event will you be participating in? \")), React.createElement(Col, null, React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggleDropdown\n      }, React.createElement(DropdownToggle, {\n        caret: true\n      }, this.state.current_event.name === \"\" ? React.createElement(\"div\", null, \" Select One \") : React.createElement(\"div\", null, \" \", this.state.current_event.name, \" \")), React.createElement(DropdownMenu, null, this.props.events.map(function (value, index) {\n        var jsonVal = value;\n        return React.createElement(DropdownItem, {\n          key: index,\n          value: jsonVal['event_id'],\n          onClick: _this2.setSelectedEvent\n        }, \" \", jsonVal['name'], \" \");\n      })))), React.createElement(Col, null, React.createElement(\"p\", {\n        style: divStyle\n      }, \" Email Address \")), React.createElement(Col, null, React.createElement(Input, {\n        type: \"text\",\n        name: \"email\",\n        id: \"email\"\n      }))), React.createElement(\"br\", null), React.createElement(Row, null, React.createElement(Col, null, React.createElement(\"p\", {\n        style: divStyle\n      }, \"  University or School: \")), React.createElement(Col, null, React.createElement(Input, {\n        type: \"text\",\n        name: \"university\",\n        id: \"university\"\n      })), React.createElement(Col, null), React.createElement(Col, null)), React.createElement(\"br\", null), React.createElement(\"center\", null, \" \", React.createElement(Button, {\n        color: \"dark\",\n        onClick: this.addOrganizer\n      }, \" Submit \"), \" \"), \" \"), React.createElement(\"br\", null), this.state.mismatchPassword ? React.createElement(\"center\", null, \" \", React.createElement(\"p\", null, \"Passwords do not match!\"), \" \") : null, this.state.wrongRegCode ? React.createElement(\"center\", null, \" \", React.createElement(\"p\", null, \"Wrong registration code! Please contact Niranjan Shankar (nshankar@princeton.edu) or Michelle Yuen (mjyeun@princeton.edu) for the correct registration code.\"), \" \") : null), React.createElement(\"br\", null))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var res, data, events, i;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetch('http://localhost:5000/event/sort_date', {\n                  method: \"GET\",\n                  headers: {\n                    \"Content-Type\": \"text/plain\",\n                    \"Access-Control-Allow-Origin\": \"*\"\n                  }\n                });\n\n              case 2:\n                res = _context3.sent;\n                _context3.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context3.sent;\n                data = _JSON$stringify(data);\n                data = JSON.parse(data);\n                events = [];\n\n                for (i = 0; i < data.length; i++) {\n                  events.push(data[i]);\n                }\n\n                return _context3.abrupt(\"return\", {\n                  events: events\n                });\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return VisitorInterestForm;\n}(React.Component);\n\nexport default VisitorInterestForm;","map":{"version":3,"sources":["/Users/nshankar13/Documents/github/TigerNest2/TigerNest/frontend/pages/visitorInterest.js"],"names":["React","Link","Head","Nav","fetch","Router","Button","Container","Row","Col","CustomInput","Form","FormFeedback","FormGroup","FormControl","Label","Input","FormText","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","PropTypes","Cookies","database_url","divStyle","color","VisitorInterestForm","props","context","state","mismatchPassword","wrongRegCode","dropdownOpen","current_event","name","start_time","end_time","description","hosting_organization","expected_number_visitors","event_id","addOrganizer","bind","setSelectedEvent","toggleDropdown","event","val","target","value","method","headers","res","json","data","JSON","parse","setState","emailInput","document","forms","firstnameInput","lastnameInput","university","event_name","organizer_info","netid","prevState","events","map","index","jsonVal","i","length","push","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Link from 'next/link'\nimport Head from '../components/head'\nimport Nav from '../components/nav'\nimport fetch from 'isomorphic-unfetch'\nimport Router from 'next/router'\nimport { Button, Container, Row, Col, CustomInput, Form, FormFeedback, FormGroup, FormControl, Label, Input, FormText, Dropdown, DropdownToggle, DropdownMenu, DropdownItem} from 'reactstrap';\nimport PropTypes from 'prop-types'\nimport Cookies from 'js-cookie';\nimport './bootstrap.css';\n\n\nconst database_url = \"http://localhost:5000\"\n\nvar divStyle = {\n  //color: 'slate grey'\n  //color: 'dodgerblue'\n  color: 'white'\n};\n\nclass VisitorInterestForm extends React.Component {\n  constructor(props, context){\n    super(props, context);\n    this.state = {\n      mismatchPassword: false,\n      wrongRegCode: false,\n      dropdownOpen: false,\n      current_event: { \n        name:\"\",\n        start_time:\"\",\n        end_time:\"\",\n        description:\"\",\n        hosting_organization:\"\",\n        expected_number_visitors:\"\",\n        event_id:\"\"\n       }\n    };\n  \n    this.addOrganizer = this.addOrganizer.bind(this)\n    this.setSelectedEvent = this.setSelectedEvent.bind(this)\n    this.toggleDropdown = this.toggleDropdown.bind(this)\n  }\n  async setSelectedEvent(event)\n  {\n    let val = event.target.value;\n    const res = await fetch(database_url + '/event/' + val, {\n           method: \"GET\",\n           headers: {\n               \"Content-Type\": \"text/plain\",                \n               \"Access-Control-Allow-Origin\": \"*\"\n      }})\n      var data = await res.json()\n      data = JSON.stringify(data)\n      data = JSON.parse(data)\n      this.setState(state => ({ current_event: data}));\n  }\n  async addOrganizer(){\n  //console.log(document.forms[\"registerForm\"][\"netid\"].value);\n\n    let emailInput = document.forms[\"registerForm\"][\"email\"].value;\n    //let passwordInput1 = document.forms[\"registerForm\"][\"password1\"].value;\n    //let passwordInput2 = document.forms[\"registerForm\"][\"password2\"].value;\n    let firstnameInput = document.forms[\"registerForm\"][\"firstname\"].value;\n    let lastnameInput = document.forms[\"registerForm\"][\"lastname\"].value;\n    let university = document.forms[\"registerForm\"][\"university\"].value;\n    let event_name = document.forms[\"registerForm\"][\"eventname\"].value;\n    //let registrationCode = document.forms[\"registerForm\"][\"regcode\"].value;\n    //let netid = document.forms[\"registerForm\"][\"netid\"].value;\n    //let netid = Cookies.get('netid');\n\n    // need to add to eligibilities and\n    //\n    /*const res = await fetch(\"http://localhost:5000/getRegCode\", {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"text/plain\",\n            \"Access-Control-Allow-Origin\": \"*\"\n        }})\n\n    var data = await res.json();\n    data = JSON.stringify(data);\n\n    data = JSON.parse(data);\n    let trueRegCode = data['regCode'];*/\n\n    /*if (passwordInput1 !== passwordInput2)\n    {\n        this.setState(state => ({ mismatchPassword: true}));\n    }*/\n    \n       let organizer_info = {\n        \"firstname\": firstnameInput,\n        \"lastname\": lastnameInput,\n        //\"password\": passwordInput1,\n        \"password\": \"abc\",\n        \"campus_organizations\": \"\", \n        \"netid\": netid,\n        \"email\": emailInput,\n       };\n       /*const res = await fetch('http://localhost:5000/event_organizer', {\n        method: \"POST\",\n        headers: {\n            'Accept': 'application/json',\n            \"Content-Type\": \"application/json\"\n        }, \n        body: JSON.stringify(organizer_info)\n      });\n       Router.push(\"/myEvents\");*/\n\n    }\n    toggleDropdown() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n  static async getInitialProps(){\n    const res = await fetch('http://localhost:5000/event/sort_date', {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"text/plain\",\n                \"Access-Control-Allow-Origin\": \"*\"\n            }})\n      var data = await res.json()\n      data = JSON.stringify(data)\n\n     data = JSON.parse(data)\n     let events = [];\n\n     for(let i = 0; i < data.length; i++)\n     {\n      events.push(data[i]);\n     }\n\n     return {\n      events:events\n     }\n  }\n  \n  render(props){\n    return (\n  <div>\n  <Head title=\"Event Signup\" />\n    <Nav />\n    <div className=\"hero\">\n\n      <div className=\"center\">\n\n      <center> <h2 style={divStyle}> Event Interest Form </h2> </center>\n      <br />\n      <center> <p style={divStyle}> Fill out the following information to sign up for an event! </p> </center>\n      <br />\n\n       <Form id=\"registerForm\">\n       <center>\n          <Row>\n          <Col>\n          <p style={divStyle}> First Name </p>\n          </Col>\n          <Col>\n          <Input type=\"text\" name=\"firstname\" id=\"firstname\"/>  \n          </Col>\n          <Col>\n          <p style={divStyle}> Last Name  </p>\n          </Col>\n          <Col>\n          <Input type=\"text\" name=\"lastname\" id=\"lastname\"/>  \n          </Col>\n          </Row>\n          <br />\n          <Row>\n          <Col> \n          <p style={divStyle}> Which event will you be participating in? </p>\n          </Col>\n          <Col> \n          <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown}>\n            <DropdownToggle caret>\n              {this.state.current_event.name === \"\" ? <div> Select One </div> : <div> {this.state.current_event.name} </div>}\n            </DropdownToggle>\n            <DropdownMenu>\n              {this.props.events.map((value, index) => {\n                let jsonVal = value;\n                return <DropdownItem key={index} value={jsonVal['event_id']} onClick={this.setSelectedEvent}> {jsonVal['name']} </DropdownItem>\n              })}\n            </DropdownMenu>\n          </Dropdown>\n          {/*<Input type=\"select\" id=\"eventname\" name=\"eventname\">\n              <option value=\"0\">Select one</option>\n              {this.props.events.map((value, index) => {\n                let jsonVal = value;\n                return <Button key=index value={jsonVal['event_id']} onClick={this.setSelectedEvent}> {jsonVal['name']} </Button>\n              })}\n\n          </Input> */}\n          </Col>\n          <Col>\n          <p style={divStyle}> Email Address </p>\n          </Col>\n          <Col>\n          <Input type=\"text\" name=\"email\" id=\"email\"/>  \n          </Col>\n          </Row>\n          <br />\n          <Row>\n          <Col>\n          <p style={divStyle}>  University or School: </p>\n          </Col>\n          <Col>\n          <Input type=\"text\" name=\"university\" id=\"university\"/>  \n          </Col>\n          <Col>\n\n          </Col>\n          <Col>\n\n          </Col>\n          </Row>\n          <br />\n          <center> <Button color=\"dark\" onClick={this.addOrganizer}> Submit </Button> </center> </center>\n          <br />\n          {this.state.mismatchPassword ? <center> <p>Passwords do not match!</p> </center>: null}\n          {this.state.wrongRegCode ? <center> <p>Wrong registration code! Please contact Niranjan Shankar (nshankar@princeton.edu) or Michelle Yuen (mjyeun@princeton.edu) for the correct registration code.</p> </center>: null}\n\n        </Form>\n        <br />\n      </div>\n\n    </div>\n  </div>)\n\n}\n}\n\n\nexport default VisitorInterestForm\n"]},"metadata":{},"sourceType":"module"}