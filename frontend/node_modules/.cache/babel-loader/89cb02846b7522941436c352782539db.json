{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Example).apply(this, arguments));\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, null, React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"exampleEmail\",\n        sm: 2\n      }, \"Email\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"exampleEmail\",\n        placeholder: \"with a placeholder\"\n      }))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"examplePassword\",\n        sm: 2\n      }, \"Password\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"password placeholder\"\n      }))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"exampleSelect\",\n        sm: 2\n      }, \"Select\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"exampleSelect\"\n      }))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"exampleSelectMulti\",\n        sm: 2\n      }, \"Select Multiple\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"selectMulti\",\n        id: \"exampleSelectMulti\",\n        multiple: true\n      }))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        sm: 2\n      }, \"Text Area\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"textarea\",\n        name: \"text\",\n        id: \"exampleText\"\n      }))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"exampleFile\",\n        sm: 2\n      }, \"File\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(Input, {\n        type: \"file\",\n        name: \"file\",\n        id: \"exampleFile\"\n      }), React.createElement(FormText, {\n        color: \"muted\"\n      }, \"This is some placeholder block-level help text for the above input. It's a bit lighter and easily wraps to a new line.\"))), React.createElement(FormGroup, {\n        tag: \"fieldset\",\n        row: true\n      }, React.createElement(\"legend\", {\n        className: \"col-form-label col-sm-2\"\n      }, \"Radio Buttons\"), React.createElement(Col, {\n        sm: 10\n      }, React.createElement(FormGroup, {\n        check: true\n      }, React.createElement(Label, {\n        check: true\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"radio2\"\n      }), ' ', \"Option one is this and that\\u2014be sure to include why it's great\")), React.createElement(FormGroup, {\n        check: true\n      }, React.createElement(Label, {\n        check: true\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"radio2\"\n      }), ' ', \"Option two can be something else and selecting it will deselect option one\")), React.createElement(FormGroup, {\n        check: true,\n        disabled: true\n      }, React.createElement(Label, {\n        check: true\n      }, React.createElement(Input, {\n        type: \"radio\",\n        name: \"radio2\",\n        disabled: true\n      }), ' ', \"Option three is disabled\")))), React.createElement(FormGroup, {\n        row: true\n      }, React.createElement(Label, {\n        for: \"checkbox2\",\n        sm: 2\n      }, \"Checkbox\"), React.createElement(Col, {\n        sm: {\n          size: 10\n        }\n      }, React.createElement(FormGroup, {\n        check: true\n      }, React.createElement(Label, {\n        check: true\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        id: \"checkbox2\"\n      }), ' ', \"Check me out\")))), React.createElement(FormGroup, {\n        check: true,\n        row: true\n      }, React.createElement(Col, {\n        sm: {\n          size: 10,\n          offset: 2\n        }\n      }, React.createElement(Button, null, \"Submit\"))));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/Users/nshankar13/Documents/github/TigerNest2/TigerNest/frontend/pages/eventRegister2.js"],"names":["React","Col","Button","Form","FormGroup","Label","Input","FormText","Example","size","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Col, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <Form>\n        <FormGroup row>\n          <Label for=\"exampleEmail\" sm={2}>Email</Label>\n          <Col sm={10}>\n            <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"examplePassword\" sm={2}>Password</Label>\n          <Col sm={10}>\n            <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"password placeholder\" />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleSelect\" sm={2}>Select</Label>\n          <Col sm={10}>\n            <Input type=\"select\" name=\"select\" id=\"exampleSelect\" />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleSelectMulti\" sm={2}>Select Multiple</Label>\n          <Col sm={10}>\n            <Input type=\"select\" name=\"selectMulti\" id=\"exampleSelectMulti\" multiple />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleText\" sm={2}>Text Area</Label>\n          <Col sm={10}>\n            <Input type=\"textarea\" name=\"text\" id=\"exampleText\" />\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"exampleFile\" sm={2}>File</Label>\n          <Col sm={10}>\n            <Input type=\"file\" name=\"file\" id=\"exampleFile\" />\n            <FormText color=\"muted\">\n              This is some placeholder block-level help text for the above input.\n              It's a bit lighter and easily wraps to a new line.\n            </FormText>\n          </Col>\n        </FormGroup>\n        <FormGroup tag=\"fieldset\" row>\n          <legend className=\"col-form-label col-sm-2\">Radio Buttons</legend>\n          <Col sm={10}>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio2\" />{' '}\n                Option one is this and that—be sure to include why it's great\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"radio\" name=\"radio2\" />{' '}\n                Option two can be something else and selecting it will deselect option one\n              </Label>\n            </FormGroup>\n            <FormGroup check disabled>\n              <Label check>\n                <Input type=\"radio\" name=\"radio2\" disabled />{' '}\n                Option three is disabled\n              </Label>\n            </FormGroup>\n          </Col>\n        </FormGroup>\n        <FormGroup row>\n          <Label for=\"checkbox2\" sm={2}>Checkbox</Label>\n          <Col sm={{ size: 10 }}>\n            <FormGroup check>\n              <Label check>\n                <Input type=\"checkbox\" id=\"checkbox2\" />{' '}\n                Check me out\n              </Label>\n            </FormGroup>\n          </Col>\n        </FormGroup>\n        <FormGroup check row>\n          <Col sm={{ size: 10, offset: 2 }}>\n            <Button>Submit</Button>\n          </Col>\n        </FormGroup>\n      </Form>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}