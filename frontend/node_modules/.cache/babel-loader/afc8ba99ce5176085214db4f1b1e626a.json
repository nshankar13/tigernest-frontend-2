{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Example).apply(this, arguments));\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Form, null, React.createElement(Row, {\n        form: true\n      }, React.createElement(Col, {\n        md: 6\n      }, React.createElement(FormGroup, null, React.createElement(Label, {\n        for: \"exampleEmail\"\n      }, \"Email\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        id: \"exampleEmail\",\n        placeholder: \"with a placeholder\"\n      }))), React.createElement(Col, {\n        md: 6\n      }, React.createElement(FormGroup, null, React.createElement(Label, {\n        for: \"examplePassword\"\n      }, \"Password\"), React.createElement(Input, {\n        type: \"password\",\n        name: \"password\",\n        id: \"examplePassword\",\n        placeholder: \"password placeholder\"\n      })))), React.createElement(FormGroup, null, React.createElement(Label, {\n        for: \"exampleAddress\"\n      }, \"Address\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"address\",\n        id: \"exampleAddress\",\n        placeholder: \"1234 Main St\"\n      })), React.createElement(FormGroup, null, React.createElement(Label, {\n        for: \"exampleAddress2\"\n      }, \"Address 2\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"address2\",\n        id: \"exampleAddress2\",\n        placeholder: \"Apartment, studio, or floor\"\n      })), React.createElement(Row, {\n        form: true\n      }, React.createElement(Col, {\n        md: 6\n      }, React.createElement(FormGroup, null, React.createElement(Label, {\n        for: \"exampleCity\"\n      }, \"City\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"city\",\n        id: \"exampleCity\"\n      }))), React.createElement(Col, {\n        md: 4\n      }, React.createElement(FormGroup, null, React.createElement(Label, {\n        for: \"exampleState\"\n      }, \"State\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"state\",\n        id: \"exampleState\"\n      }))), React.createElement(Col, {\n        md: 2\n      }, React.createElement(FormGroup, null, React.createElement(Label, {\n        for: \"exampleZip\"\n      }, \"Zip\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"zip\",\n        id: \"exampleZip\"\n      })))), React.createElement(FormGroup, {\n        check: true\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        name: \"check\",\n        id: \"exampleCheck\"\n      }), React.createElement(Label, {\n        for: \"exampleCheck\",\n        check: true\n      }, \"Check me out\")), React.createElement(Button, null, \"Sign in\"));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/Users/nshankar13/Documents/github/TigerNest2/TigerNest/frontend/pages/eventRegister2.js"],"names":["React","Col","Row","Button","Form","FormGroup","Label","Input","FormText","Example","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\n\nexport default class Example extends React.Component {\n  render() {\n    return (\n      <Form>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"exampleEmail\">Email</Label>\n              <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"with a placeholder\" />\n            </FormGroup>\n          </Col>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"examplePassword\">Password</Label>\n              <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"password placeholder\" />\n            </FormGroup>\n          </Col>\n        </Row>\n        <FormGroup>\n          <Label for=\"exampleAddress\">Address</Label>\n          <Input type=\"text\" name=\"address\" id=\"exampleAddress\" placeholder=\"1234 Main St\"/>\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"exampleAddress2\">Address 2</Label>\n          <Input type=\"text\" name=\"address2\" id=\"exampleAddress2\" placeholder=\"Apartment, studio, or floor\"/>\n        </FormGroup>\n        <Row form>\n          <Col md={6}>\n            <FormGroup>\n              <Label for=\"exampleCity\">City</Label>\n              <Input type=\"text\" name=\"city\" id=\"exampleCity\"/>\n            </FormGroup>\n          </Col>\n          <Col md={4}>\n            <FormGroup>\n              <Label for=\"exampleState\">State</Label>\n              <Input type=\"text\" name=\"state\" id=\"exampleState\"/>\n            </FormGroup>\n          </Col>\n          <Col md={2}>\n            <FormGroup>\n              <Label for=\"exampleZip\">Zip</Label>\n              <Input type=\"text\" name=\"zip\" id=\"exampleZip\"/>\n            </FormGroup>  \n          </Col>\n        </Row>\n        <FormGroup check>\n          <Input type=\"checkbox\" name=\"check\" id=\"exampleCheck\"/>\n          <Label for=\"exampleCheck\" check>Check me out</Label>\n        </FormGroup>\n        <Button>Sign in</Button>\n      </Form>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}