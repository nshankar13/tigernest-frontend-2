{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types';\nContainer.propTypes = {\n  fluid: PropTypes.bool // applies .container-fluid class\n\n};\nRow.propTypes = {\n  noGutters: PropTypes.bool,\n  // see https://reactstrap.github.io/components/form Form Grid with Form Row\n  form: PropTypes.bool\n};\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool, PropTypes.shape({\n  size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n  // example size values:\n  // 12 || \"12\" => col-12 or col-`width`-12\n  // auto => col-auto or col-`width`-auto\n  // true => col or col-`width`\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nCol.propTypes = {\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  // override the predefined width (the ones above) with your own custom widths.\n  // see https://github.com/reactstrap/reactstrap/issues/297#issuecomment-273556116\n  widths: PropTypes.array\n};\n\nvar Example =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Example, _React$Component);\n\n  function Example() {\n    _classCallCheck(this, Example);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Example).apply(this, arguments));\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, null, React.createElement(Row, null, React.createElement(Col, null, \".col\")), React.createElement(Row, null, React.createElement(Col, null, \".col\"), React.createElement(Col, null, \".col\"), React.createElement(Col, null, \".col\"), React.createElement(Col, null, \".col\")), React.createElement(Row, null, React.createElement(Col, {\n        xs: \"3\"\n      }, \".col-3\"), React.createElement(Col, {\n        xs: \"auto\"\n      }, \".col-auto - variable width content\"), React.createElement(Col, {\n        xs: \"3\"\n      }, \".col-3\")), React.createElement(Row, null, React.createElement(Col, {\n        xs: \"6\"\n      }, \".col-6\"), React.createElement(Col, {\n        xs: \"6\"\n      }, \".col-6\")), React.createElement(Row, null, React.createElement(Col, {\n        xs: \"6\",\n        sm: \"4\"\n      }, \".col-6 .col-sm-4\"), React.createElement(Col, {\n        xs: \"6\",\n        sm: \"4\"\n      }, \".col-6 .col-sm-4\"), React.createElement(Col, {\n        sm: \"4\"\n      }, \".col-sm-4\")), React.createElement(Row, null, React.createElement(Col, {\n        sm: {\n          size: 6,\n          order: 2,\n          offset: 1\n        }\n      }, \".col-sm-6 .order-sm-2 .offset-sm-1\")), React.createElement(Row, null, React.createElement(Col, {\n        sm: \"12\",\n        md: {\n          size: 6,\n          offset: 3\n        }\n      }, \".col-sm-12 .col-md-6 .offset-md-3\")), React.createElement(Row, null, React.createElement(Col, {\n        sm: {\n          size: 'auto',\n          offset: 1\n        }\n      }, \".col-sm-auto .offset-sm-1\"), React.createElement(Col, {\n        sm: {\n          size: 'auto',\n          offset: 1\n        }\n      }, \".col-sm-auto .offset-sm-1\")));\n    }\n  }]);\n\n  return Example;\n}(React.Component);\n\nexport { Example as default };","map":{"version":3,"sources":["/Users/nshankar13/Documents/github/TigerNest2/TigerNest/frontend/pages/eventRegister2.js"],"names":["React","Container","Row","Col","PropTypes","propTypes","fluid","bool","noGutters","form","stringOrNumberProp","oneOfType","number","string","columnProps","shape","size","order","offset","xs","sm","md","lg","xl","widths","array","Example","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport PropTypes from 'prop-types'\n\nContainer.propTypes = {\n  fluid:  PropTypes.bool\n  // applies .container-fluid class\n}\n\nRow.propTypes = {\n  noGutters: PropTypes.bool,\n  // see https://reactstrap.github.io/components/form Form Grid with Form Row\n  form: PropTypes.bool\n}\n\nconst stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nconst columnProps = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.number,\n  PropTypes.bool,\n  PropTypes.shape({\n    size: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n    // example size values:\n    // 12 || \"12\" => col-12 or col-`width`-12\n    // auto => col-auto or col-`width`-auto\n    // true => col or col-`width`\n    order: stringOrNumberProp,\n    offset: stringOrNumberProp\n  })\n]);\n\nCol.propTypes = {\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  // override the predefined width (the ones above) with your own custom widths.\n  // see https://github.com/reactstrap/reactstrap/issues/297#issuecomment-273556116\n  widths: PropTypes.array,\n}\n\nexport default class Example extends React.Component {\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col>.col</Col>\n        </Row>\n        <Row>\n          <Col>.col</Col>\n          <Col>.col</Col>\n          <Col>.col</Col>\n          <Col>.col</Col>\n        </Row>\n        <Row>\n          <Col xs=\"3\">.col-3</Col>\n          <Col xs=\"auto\">.col-auto - variable width content</Col>\n          <Col xs=\"3\">.col-3</Col>\n        </Row>\n        <Row>\n          <Col xs=\"6\">.col-6</Col>\n          <Col xs=\"6\">.col-6</Col>\n        </Row>\n        <Row>\n          <Col xs=\"6\" sm=\"4\">.col-6 .col-sm-4</Col>\n          <Col xs=\"6\" sm=\"4\">.col-6 .col-sm-4</Col>\n          <Col sm=\"4\">.col-sm-4</Col>\n        </Row>\n        <Row>\n          <Col sm={{ size: 6, order: 2, offset: 1 }}>.col-sm-6 .order-sm-2 .offset-sm-1</Col>\n        </Row>\n        <Row>\n          <Col sm=\"12\" md={{ size: 6, offset: 3 }}>.col-sm-12 .col-md-6 .offset-md-3</Col>\n        </Row>\n        <Row>\n          <Col sm={{ size: 'auto', offset: 1 }}>.col-sm-auto .offset-sm-1</Col>\n          <Col sm={{ size: 'auto', offset: 1 }}>.col-sm-auto .offset-sm-1</Col>\n        </Row>\n      </Container>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}